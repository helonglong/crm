<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hll.dao.OrdersLineMapper">
  <resultMap id="BaseResultMap" type="com.hll.pojo.OrdersLine">
    <id column="ODD_ID" jdbcType="DECIMAL" property="oddId" />
    <result column="ODD_ORDER_ID" jdbcType="DECIMAL" property="oddOrderId" />
    <result column="ODD_PROD_ID" jdbcType="DECIMAL" property="oddProdId" />
    <result column="ODD_COUNT" jdbcType="DECIMAL" property="oddCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ODD_ID, ODD_ORDER_ID, ODD_PROD_ID, ODD_COUNT
  </sql>
  <select id="selectByExample" parameterType="com.hll.pojo.OrdersLineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SSM_CRM.ORDERS_LINE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SSM_CRM.ORDERS_LINE
    where ODD_ID = #{oddId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SSM_CRM.ORDERS_LINE
    where ODD_ID = #{oddId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.hll.pojo.OrdersLineExample">
    delete from SSM_CRM.ORDERS_LINE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hll.pojo.OrdersLine">
    insert into SSM_CRM.ORDERS_LINE (ODD_ID, ODD_ORDER_ID, ODD_PROD_ID, 
      ODD_COUNT)
    values (#{oddId,jdbcType=DECIMAL}, #{oddOrderId,jdbcType=DECIMAL}, #{oddProdId,jdbcType=DECIMAL}, 
      #{oddCount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.hll.pojo.OrdersLine">
    insert into SSM_CRM.ORDERS_LINE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oddId != null">
        ODD_ID,
      </if>
      <if test="oddOrderId != null">
        ODD_ORDER_ID,
      </if>
      <if test="oddProdId != null">
        ODD_PROD_ID,
      </if>
      <if test="oddCount != null">
        ODD_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oddId != null">
        #{oddId,jdbcType=DECIMAL},
      </if>
      <if test="oddOrderId != null">
        #{oddOrderId,jdbcType=DECIMAL},
      </if>
      <if test="oddProdId != null">
        #{oddProdId,jdbcType=DECIMAL},
      </if>
      <if test="oddCount != null">
        #{oddCount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hll.pojo.OrdersLineExample" resultType="java.lang.Long">
    select count(*) from SSM_CRM.ORDERS_LINE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="selectAll" parameterType="integer" resultType="com.hll.pojo.OrdersList">
      SELECT
        d.ODD_ID ordersListId,
        PROD_NAME ordersListName,
        d.ODD_COUNT ordersListNumber,
        PROD_PRICE ordersListPrice,
        PROD_UNIT ordersListCompany,
        d.ODD_COUNT*PROD_PRICE ordersListTotalPrice
      FROM ORDERS_LINE d,PRODUCT p
      WHERE d.ODD_PROD_ID=p.PROD_ID AND d.ODD_ORDER_ID=#{id}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update SSM_CRM.ORDERS_LINE
    <set>
      <if test="record.oddId != null">
        ODD_ID = #{record.oddId,jdbcType=DECIMAL},
      </if>
      <if test="record.oddOrderId != null">
        ODD_ORDER_ID = #{record.oddOrderId,jdbcType=DECIMAL},
      </if>
      <if test="record.oddProdId != null">
        ODD_PROD_ID = #{record.oddProdId,jdbcType=DECIMAL},
      </if>
      <if test="record.oddCount != null">
        ODD_COUNT = #{record.oddCount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SSM_CRM.ORDERS_LINE
    set ODD_ID = #{record.oddId,jdbcType=DECIMAL},
      ODD_ORDER_ID = #{record.oddOrderId,jdbcType=DECIMAL},
      ODD_PROD_ID = #{record.oddProdId,jdbcType=DECIMAL},
      ODD_COUNT = #{record.oddCount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hll.pojo.OrdersLine">
    update SSM_CRM.ORDERS_LINE
    <set>
      <if test="oddOrderId != null">
        ODD_ORDER_ID = #{oddOrderId,jdbcType=DECIMAL},
      </if>
      <if test="oddProdId != null">
        ODD_PROD_ID = #{oddProdId,jdbcType=DECIMAL},
      </if>
      <if test="oddCount != null">
        ODD_COUNT = #{oddCount,jdbcType=DECIMAL},
      </if>
    </set>
    where ODD_ID = #{oddId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hll.pojo.OrdersLine">
    update SSM_CRM.ORDERS_LINE
    set ODD_ORDER_ID = #{oddOrderId,jdbcType=DECIMAL},
      ODD_PROD_ID = #{oddProdId,jdbcType=DECIMAL},
      ODD_COUNT = #{oddCount,jdbcType=DECIMAL}
    where ODD_ID = #{oddId,jdbcType=DECIMAL}
  </update>
</mapper>